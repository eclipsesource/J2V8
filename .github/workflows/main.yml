name: Build J2V8

on: [push]

jobs:
  j2v8_macos:
    name: Build J2V8 for macOS
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Download monolithic libraries and extract to v8.out directory
      run: |
        curl -O https://download.eclipsesource.com/j2v8/v8/libv8_7.4.288_monolith.zip
        mkdir -p v8.out
        unzip libv8_7.4.288_monolith.zip -d v8.out

        # start j2v8 build
        python build.py -t macos -a x64 j2v8cmake j2v8jni j2v8cpp j2v8optimize j2v8java j2v8test

    - name: Archive J2V8 macOS x86_64 jar
      uses: actions/upload-artifact@v1.0.0
      with:
        name: j2v8-macos-x86_64
        path: build.out/j2v8_macos_x86_64-6.0.0.jar
  
  generate_j2v8_archives:
    name: Create J2V8 Linux jar and Android aar archive files
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Download monolithic libraries to v8.out directory and bundle Linux jar and Android aar file
      run: |
        curl -O https://download.eclipsesource.com/j2v8/v8/libv8_8.3.110.9_monolith.zip
        mkdir -p v8.out
        unzip libv8_8.3.110.9_monolith.zip -d v8.out

        # start j2v8 build
        python build.py -t linux -a x64 --docker j2v8cmake j2v8jni j2v8cpp j2v8optimize j2v8java j2v8test
        python build.py -t android -a x86 --docker --keep-native-libs j2v8cmake j2v8jni j2v8cpp j2v8optimize j2v8java
        python build.py -t android -a arm --docker --keep-native-libs j2v8cmake j2v8jni j2v8cpp j2v8optimize j2v8java
        python build.py -t android -a x86_64 --docker --keep-native-libs j2v8cmake j2v8jni j2v8cpp j2v8optimize j2v8java
        python build.py -t android -a arm64 --docker --keep-native-libs j2v8cmake j2v8jni j2v8cpp j2v8optimize j2v8java

    - name: Release
      env:
          KEY_ID: ${{ secrets.KEY_ID }}
          KEYSTORE: ${{ secrets.KEYSTORE }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          MAVEN_REPO_USER: ${{ secrets.MAVEN_REPO_USER }}
          MAVEN_REPO_PASS: ${{ secrets.MAVEN_REPO_PASS }}
      if: github.ref == 'refs/heads/master'
      run: python build.py -t android -a arm64 j2v8release --keep-native-libs --docker

    - name: Archive J2V8 Android aar file
      uses: actions/upload-artifact@v1.0.0
      with:
        name: j2v8-android-aar
        path: build/outputs/aar/j2v8-release.aar
    - name: Archive J2V8 Linux x86_64 jar
      uses: actions/upload-artifact@v1.0.0
      with:
        name: j2v8-linux-x86_64
        path: build.out/j2v8_linux_x86_64-6.2.0.jar
