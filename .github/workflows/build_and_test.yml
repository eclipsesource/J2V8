name: Build and test J2V8

on: [push]

jobs:
  build_j2v8_linux_x86_64:
    name: Build J2V8 for Linux
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Download monolithic libraries and extract to v8.out
      run: |
        curl -k -O http://download.eclipsesource.com/j2v8/v8/libv8_9.3.345.11_monolith.zip
        mkdir -p v8.out
        unzip libv8_9.3.345.11_monolith.zip -d v8.out

    - name: Start J2V8 build
      run: python2 build.py -t linux -a x64 --docker j2v8cmake j2v8jni j2v8cpp j2v8optimize j2v8java j2v8test

    - name: Archive J2V8 Linux x86_64 jar
      uses: actions/upload-artifact@v1.0.0
      with:
        name: j2v8-linux-x86_64
        path: build.out/j2v8_linux_x86_64-6.2.0.jar

  build_j2v8_android:
    name: Build J2V8 for Android
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Download monolithic libraries and extract to v8.out
      run: |
        curl -k -O http://download.eclipsesource.com/j2v8/v8/libv8_9.3.345.11_monolith.zip
        mkdir -p v8.out
        unzip libv8_9.3.345.11_monolith.zip -d v8.out

    - name: Start J2V8 build
      run: |
        python2 build.py -t android -a x86 --docker --keep-native-libs j2v8cmake j2v8jni j2v8cpp j2v8optimize j2v8java
        python2 build.py -t android -a arm --docker --keep-native-libs j2v8cmake j2v8jni j2v8cpp j2v8optimize j2v8java
        python2 build.py -t android -a x86_64 --docker --keep-native-libs j2v8cmake j2v8jni j2v8cpp j2v8optimize j2v8java
        python2 build.py -t android -a arm64 --docker --keep-native-libs j2v8cmake j2v8jni j2v8cpp j2v8optimize j2v8java

    - name: Archive J2V8 Android aar
      uses: actions/upload-artifact@v1.0.0
      with:
        name: j2v8-android-aar
        path: build/outputs/aar/j2v8-release.aar
